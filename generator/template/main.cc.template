/*********************************************************
*   *****  *****  *   *  *   *  *****  *****  *****
*     *      *    **  *   ***   *   *  *   *  *
*     *      *    * * *    *    *****  *****  *
*     *      *    *  **    *    * *    *      *
*     *    *****  *   *    *    *   *  *      *****
*     
* ${FILE_NAME}
* ${CREATE_TIME}
* Generated by tinyrpc framework tinyrpc_genarator.py
* Do not edit it!!!
*********************************************************/

#include <google/protobuf/service.h>
#include <memory>
#include "tinyrpc/tool/log.h"
#include "tinyrpc/tool/config.h"
#include "tinyrpc/net/tcp/net_addr.h"
#include "tinyrpc/net/tcp/tcp_server.h"
#include "tinyrpc/net/rpc/rpc_dispatcher.h"
${INCLUDE_SERVER_HEADER}

int main(int argc, char* argv[]) {

  if (argc != 2) {
    printf("Start ${PROJECT_NAME} error, argc not 2 \n");
    printf("Start like this: \n");
    printf("./${PROJECT_NAME} ../conf/tinyrpc.xml \n");
    return 0;
  }

  tinyrpc::Config::SetGlobalConfig(argv[1]);

  tinyrpc::Logger::InitGlobalLogger();

  tinyrpc::RpcDispatcher::GetRpcDispatcher()->registerService(std::make_shared<${CLASS_NAME}>());

  tinyrpc::IPNetAddr::s_ptr addr = std::make_shared<tinyrpc::IPNetAddr>("127.0.0.1", tinyrpc::Config::GetGlobalConfig()->m_port);

  tinyrpc::TcpServer tcp_server(addr);

  tcp_server.Start();

  return 0;
}